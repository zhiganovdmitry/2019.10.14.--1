#include <iostream>
#include <string>
#include <algorithm>
using namespace std;
int Levenstein(string s1, string s2,int i,int j)
{
	if((s1.size()==0)&&(s2.size()==0))
	{
		return 0;
	}
	if ((i==0)&&(j==0))
	{
		if (s1[0]==s2[0])
		{
			return 0;
		}
		else {
			return 1;
		}
	}
	if(j==0)
	{
		return min(i+1,
		Levenstein(s1,s2,i-1,j)+1);
	}
	if(i==0)
	{
		return min(j+1,
		Levenstein(s1,s2,i,j-1)+1);
	}
	if(s1[i]==s2[j])
	{
		return Levenstein(s1, s2, i-1,j-1);
	}
	return min(
		Levenstein(s1,s2,i,j-1)+1,min(
		Levenstein(s1,s2,i-1,j)+1,
		Levenstein(s1,s2,i-1,j-1)+1));
}
int main() {
	string s1;
	string s2;
	cin>>s1>>s2;
	int i=s1.size();
	int j=s2.size();
	cout<<Levenstein(s1,s2,i,j);
	return 0;
}
